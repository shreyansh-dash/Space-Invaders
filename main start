import pygame
import random
import math
from pygame import mixer
#initializing pygame
pygame.init()

#screen
screen= pygame.display.set_mode((800,600))

bg= pygame.image.load('spacebg.png')

# bg sound
mixer.music.load('bg music.wav')
mixer.music.play (-1)



#Icon creation
pygame.display.set_caption('Space Invaders')
Logo= pygame.image.load('logo.png')
pygame.display.set_icon(Logo)

#Player
playerImg = pygame.image.load("player.png")
playerX= 360
playerY= 500
playerX_change = 0

def player(X,Y):
    screen.blit(playerImg, (X, Y))


#Aliens

alienImg = []
alienX= []
alienY= []
alienX_change = []
alienY_change = []
num_of_aliens = 5

for i in range(num_of_aliens):

    alienImg.append(pygame.image.load("alien.png"))
    alienX.append(random.randint(0,736))
    alienY.append(random.randint(50,150))
    alienX_change.append(0.3) 
    alienY_change.append(40)



#infinite loop
running = True 
while running:
    
    # this will help to keep the screen color constant
    screen.fill((0,0,0))
    screen.blit(bg,(0,0))
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        #adding keyboard keys
        if  event.type == pygame.KEYDOWN:  #pressing of key
            if event.key == pygame.K_LEFT:
                playerX_change = -0.3
            if event.key == pygame.K_RIGHT:
                playerX_change = 0.3
            #if event.key == pygame.K_SPACE:
                #if bullet_state is 'ready':
                 #   bullet_sound = mixer.Sound('shoot.wav')
                  #  bullet_sound.play()
                   # bulletX=playerX             # saved current value of playerX and then use it in bulletX so that it doesn't change path
                    #fire_bullet(bulletX,bulletY)
        if  event.type == pygame.KEYUP:  #release of key
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_change = 0




# defining boundaries of  player
    playerX += playerX_change

    if playerX <=0:
        playerX = 0
    elif playerX >=736:
        playerX = 736  

# defining boundaries of alien  and its movement  

    for i in range (num_of_aliens):
        alienX[i] += alienX_change[i]
    
        if alienX[i] <=0:
            alienX_change[i] = 0.2
            alienY[i] += alienY_change[i]
        elif alienX[i] >=736:
            alienX_change[i] = - 0.2
            alienY[i] += alienY_change[i]

    player(playerX, playerY)
    pygame.display.update()
